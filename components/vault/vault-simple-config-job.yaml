apiVersion: batch/v1
kind: Job
metadata:
  name: vault-simple-config
  namespace: vault
  labels:
    app.kubernetes.io/name: vault-simple
    app.kubernetes.io/part-of: platform
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-config
        image: hashicorp/vault:1.15.2
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Wait for Vault to be ready
          echo "Waiting for Vault to be ready..."
          until vault status -address=http://vault-simple:8200; do
            echo "Vault not ready, waiting..."
            sleep 5
          done
          
          # Check if Vault is already initialized and unsealed
          VAULT_STATUS=$(vault status -address=http://vault-simple:8200)
          echo "Vault status:"
          echo "$VAULT_STATUS"
          
          if echo "$VAULT_STATUS" | grep -q "Initialized.*true" && echo "$VAULT_STATUS" | grep -q "Sealed.*false"; then
            echo "Vault is initialized and unsealed - proceeding with configuration"
          else
            echo "Vault is not ready - needs to be initialized or unsealed"
            exit 1
          fi
          
          # Login with root token
          echo "Logging in to Vault..."
          vault login -address=http://vault-simple:8200 -method=token $VAULT_ROOT_TOKEN
          
          # Enable Kubernetes authentication
          echo "Enabling Kubernetes authentication..."
          if ! vault auth list -address=http://vault-simple:8200 | grep -q "kubernetes/"; then
            vault auth enable -address=http://vault-simple:8200 kubernetes
            echo "Kubernetes authentication enabled"
          else
            echo "Kubernetes authentication already enabled"
          fi
          
          # Configure Kubernetes authentication
          echo "Configuring Kubernetes authentication..."
          vault write -address=http://vault-simple:8200 auth/kubernetes/config \
            kubernetes_host="https://kubernetes.default.svc" \
            kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
            token_reviewer_jwt=@/var/run/secrets/kubernetes.io/serviceaccount/token
          
          # Create Kubernetes role for vault service account
          echo "Creating Kubernetes role..."
          vault write -address=http://vault-simple:8200 auth/kubernetes/role/vault \
            bound_service_account_names=vault \
            bound_service_account_namespaces=vault \
            policies=vault-policy \
            ttl=1h
          
          # Enable KV v2 secrets engine
          echo "Enabling KV v2 secrets engine..."
          if ! vault secrets list -address=http://vault-simple:8200 | grep -q "secret/"; then
            vault secrets enable -address=http://vault-simple:8200 -path=secret kv-v2
            echo "KV v2 secrets engine enabled at secret/"
          else
            echo "KV v2 secrets engine already enabled"
          fi
          
          # Enable KV v2 secrets engine for apps
          echo "Enabling KV v2 secrets engine for apps..."
          if ! vault secrets list -address=http://vault-simple:8200 | grep -q "apps/"; then
            vault secrets enable -address=http://vault-simple:8200 -path=apps kv-v2
            echo "KV v2 secrets engine enabled at apps/"
          else
            echo "KV v2 secrets engine already enabled"
          fi
          
          # Enable Azure AD authentication
          echo "Enabling Azure AD authentication..."
          if ! vault auth list -address=http://vault-simple:8200 | grep -q "azure/"; then
            vault auth enable -address=http://vault-simple:8200 azure
            echo "Azure AD authentication enabled"
          else
            echo "Azure AD authentication already enabled"
          fi
          
          # Configure Azure AD authentication
          echo "Configuring Azure AD authentication..."
          vault write -address=http://vault-simple:8200 auth/azure/config \
            tenant_id="$AZURE_TENANT_ID" \
            resource="https://management.azure.com/"
          
          # Create Azure AD role for users
          echo "Creating Azure AD role for users..."
          vault write -address=http://vault-simple:8200 auth/azure/role/azure-users \
            policies="azure-user-policy" \
            bound_service_principal_ids="$AZURE_SP_ID" \
            ttl=8h \
            max_ttl=24h
          
          # Create Azure AD user policy
          echo "Creating Azure AD user policy..."
          vault policy write -address=http://vault-simple:8200 azure-user-policy - <<EOF
          # Policy for Azure AD authenticated users
          path "secret/*" {
            capabilities = ["read", "list"]
          }
          path "apps/*" {
            capabilities = ["read", "list"]
          }
          path "auth/azure/login" {
            capabilities = ["create", "read"]
          }
          EOF
          
          # Create vault policy
          echo "Creating vault policy..."
          vault policy write -address=http://vault-simple:8200 vault-policy - <<EOF
          # Vault policy for vault service account
          path "secret/*" {
            capabilities = ["read", "list"]
          }
          path "apps/*" {
            capabilities = ["read", "list"]
          }
          path "auth/kubernetes/login" {
            capabilities = ["create", "read"]
          }
          path "auth/azure/login" {
            capabilities = ["create", "read"]
          }
          EOF
          
          echo "Vault configuration completed successfully!"
        env:
        - name: VAULT_ADDR
          value: "http://vault-simple:8200"
        - name: VAULT_ROOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-root-token
              key: token
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: vault-azure-config
              key: tenant-id
        - name: AZURE_SP_ID
          valueFrom:
            secretKeyRef:
              name: vault-azure-config
              key: service-principal-id
        volumeMounts:
        - name: vault-token
          mountPath: /root/.vault-token
          subPath: token
      volumes:
      - name: vault-token
        secret:
          secretName: vault-root-token
      restartPolicy: Never
      backoffLimit: 3
